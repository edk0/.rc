#!/usr/bin/env es

# create symlinks from $HOME to here.
# if here is inside $HOME, the links are relative.

# install u  to uninstall
# install f  to install even if it overwrites things

catch @ {
   fn realpath p { readlink -f $p }
} {
   %pathsearch realpath
}

if {result $0 || result $HOME || ~ $HOME /} {
   echo Insufficient environment
   exit 1
}

uninst=
force=
relative=

if {~ $1 u} {
   echo Uninstall
   uninst=y
}

if {~ $1 f} {
   echo Force install
   force=y
}

local (me=$0) installpath=`{dirname `{realpath $me}}

if {~ $installpath $HOME/*} {
   linkpath = <={~~ $installpath $HOME/*}
   relative=y
   echo 'Relative install:' $linkpath
} {
   linkpath = $installpath
   echo 'Absolute install:' $linkpath
}

#####

fn uninstall {
   if {[ -f $HOME/.edk.uninstall.es ]} {
      fork {. $HOME/.edk.uninstall.es}
      rm $HOME/.edk.uninstall.es
   }
}

fn relpath f {
   if {result $relative} return
   local (t='') {
      while {~ $f ?*/?*} {
         f = (<={~~ f ?*/*})(3)
         t = $t ^ '../'
      }
      result $t
   }
}

fn link_file n {
   echo + $n
   local (linkpath=(<={relpath $n})^$linkpath) {
      if {[ -f $HOME/$n ]} {
         if {! result $#force} {
            ln -fs $linkpath/$n $HOME/$n
         } {
            echo error: $HOME/$n exists
            return file-exists
         }
      } {
         ln -s $linkpath/$n $HOME/$n
      }
   }
   let (path=$HOME/$n) {
      echo {echo - $n; rm $path} >> $HOME/.edk.uninstall.es
   }
}

#####

targets = (
   .config/herbstluftwm
   .esrc
   .gitconfig
   .profile
   .vim
   .vimrc
   .Xresources
   .xsessionrc
)

#####

uninstall

if {result $#uninst} {
   for (target=$targets) {
      local (r=<={link_file $target}) {
         if {! result $r} {
            echo error occurred, uninstalling!
            uninstall
            echo failed to install: $r
            exit $r
         }
      }
   }
}

echo Done.
